################################################################################
#
#  NetFPGA-10G http://www.netfpga.org
#
#  File:
#        nf10_axis_pbs_bridge_v2_1_0.mpd
#
#  Library:
#        hw/contrib/pcores/nf10_axis_pbs_bridge_v1_10_a
#
#  Author:
#        Gianni Antichi, Muhammad Shahbaz
#
#  Description:
#        Microprocessor Peripheral Description File
#
#  Copyright notice:
#        Copyright (C) 2010, 2011 The Board of Trustees of The Leland Stanford
#                                 Junior University
#
#  Licence:
#        This file is part of the NetFPGA 10G development base package.
#
#        This file is free code: you can redistribute it and/or modify it under
#        the terms of the GNU Lesser General Public License version 2.1 as
#        published by the Free Software Foundation.
#
#        This package is distributed in the hope that it will be useful, but
#        WITHOUT ANY WARRANTY; without even the implied warranty of
#        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#        Lesser General Public License for more details.
#
#        You should have received a copy of the GNU Lesser General Public
#        License along with the NetFPGA source package.  If not, see
#        http://www.gnu.org/licenses/.
#
#

BEGIN nf10_axis_pbs_bridge

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION USAGE_LEVEL = BASE_USER
OPTION STYLE = HDL
OPTION IP_GROUP = Bus and Bridge:MICROBLAZE
OPTION DESC = NetFPGA-10G AXIS to PBS Bridge 
OPTION LONG_DESC = NetFPGA-10G AXIS to PBS Bridge 

## Bus Interfaces
BUS_INTERFACE BUS = M_AXIS, BUS_STD = AXIS, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = S_AXIS, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = M_PBS, BUS_STD = PBS, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = S_PBS, BUS_STD = PBS, BUS_TYPE = TARGET

## AXIS Parameters
PARAMETER C_S_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, BUS = S_AXIS
PARAMETER C_S_AXIS_TDATA_WIDTH = 64, DT = integer, RANGE = (8,32,64,256), BUS = S_AXIS
PARAMETER C_S_AXIS_TUSER_WIDTH = 128, DT = INTEGER, RANGE = (128), BUS = S_AXIS
PARAMETER C_M_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, BUS = M_AXIS
PARAMETER C_M_AXIS_TDATA_WIDTH = 64, DT = integer, RANGE = (8,32,64,256), BUS = M_AXIS
PARAMETER C_M_AXIS_TUSER_WIDTH = 128, DT = INTEGER, RANGE = (128), BUS = M_AXIS

## PBS Parameters
PARAMETER C_S_PBS_DATA_WIDTH = 64, DT = integer, RANGE = (32, 64), BUS = S_PBS
PARAMETER C_M_PBS_DATA_WIDTH = 64, DT = integer, RANGE = (32, 64), BUS = M_PBS

## Peripheral ports
PORT ACLK = "", DIR = I, SIGIS = CLK, BUS = M_AXIS:S_AXIS
PORT ARESETN = "", DIR = I, SIGIS = RST

PORT S_AXIS_TREADY = TREADY, DIR = O, BUS = S_AXIS
PORT S_AXIS_TDATA = TDATA, DIR = I, VEC = [C_S_AXIS_TDATA_WIDTH-1:0], BUS = S_AXIS
PORT S_AXIS_TLAST = TLAST, DIR = I, BUS = S_AXIS
PORT S_AXIS_TVALID = TVALID, DIR = I, BUS = S_AXIS
PORT S_AXIS_TSTRB = TSTRB, DIR = I, VEC = [(C_S_AXIS_TDATA_WIDTH/8)-1:0], BUS = S_AXIS, ENDIAN = LITTLE
PORT S_AXIS_TUSER = TUSER, DIR = I, VEC = [C_S_AXIS_TUSER_WIDTH-1:0], BUS = S_AXIS, ENDIAN = LITTLE

PORT M_AXIS_TVALID = TVALID, DIR = O, BUS = M_AXIS
PORT M_AXIS_TDATA = TDATA, DIR = O, VEC = [C_M_AXIS_TDATA_WIDTH-1:0], BUS = M_AXIS
PORT M_AXIS_TLAST = TLAST, DIR = O, BUS = M_AXIS
PORT M_AXIS_TREADY = TREADY, DIR = I, BUS = M_AXIS
PORT M_AXIS_TSTRB = TSTRB, DIR = O, VEC = [(C_M_AXIS_TDATA_WIDTH/8)-1:0], BUS = M_AXIS, ENDIAN = LITTLE
PORT M_AXIS_TUSER = TUSER, DIR = O, VEC = [C_M_AXIS_TUSER_WIDTH-1:0], BUS = M_AXIS, ENDIAN = LITTLE

PORT S_PBS_DATA = DATA, DIR = I, VEC = [C_S_PBS_DATA_WIDTH-1:0], BUS = S_PBS
PORT S_PBS_CTRL = CTRL, DIR = I, VEC = [(C_S_PBS_DATA_WIDTH/8)-1:0], BUS = S_PBS
PORT S_PBS_WR = WR, DIR = I, BUS = S_PBS
PORT S_PBS_RDY = RDY, DIR = O, BUS = S_PBS

PORT M_PBS_DATA = DATA, DIR = O, VEC = [C_M_PBS_DATA_WIDTH-1:0], BUS = M_PBS 
PORT M_PBS_CTRL = CTRL, DIR = O, VEC = [(C_M_PBS_DATA_WIDTH/8)-1:0], BUS = M_PBS
PORT M_PBS_WR = WR, DIR = O, BUS = M_PBS
PORT M_PBS_RDY = RDY, DIR = I, BUS = M_PBS

END
